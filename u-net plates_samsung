{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"u-net plates_samsung","version":"0.3.2","provenance":[{"file_id":"1cGnmRqQOIv8uC21418X0ZXn492HxuX_e","timestamp":1563703026870},{"file_id":"1fEKdNBnmiJtbnsr9WhLEhLEGqS0QKkWE","timestamp":1563559960273},{"file_id":"1jlp2qVZ50y-0HHNIJPap4WOdmYzoqyCN","timestamp":1563532778221},{"file_id":"1whJA9eqjTdlLl6kQmSdcVWZOS6CqPGEn","timestamp":1563304308705}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"MqwyY-x98VhU","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"d0fe9e5d-77c7-4cf8-b9d9-148f9d529137","executionInfo":{"status":"ok","timestamp":1563716161031,"user_tz":-180,"elapsed":4313,"user":{"displayName":"Dmitriy Slabuhin","photoUrl":"","userId":"12413559071710787441"}}},"source":["!pwd"],"execution_count":1,"outputs":[{"output_type":"stream","text":["/content\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"btar1t7-8aR4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":128},"outputId":"2923d21c-6f1f-41ac-b6f7-5c587860f0fa","executionInfo":{"status":"ok","timestamp":1563716213985,"user_tz":-180,"elapsed":57265,"user":{"displayName":"Dmitriy Slabuhin","photoUrl":"","userId":"12413559071710787441"}}},"source":["from google.colab import drive\n","drive.mount('gdrive')"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&scope=email%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdocs.test%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.photos.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fpeopleapi.readonly&response_type=code\n","\n","Enter your authorization code:\n","··········\n","Mounted at gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Y9TzA3IY8y_M","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"d92c9fe4-4e11-4ab9-b3f2-fd9dcb496930","executionInfo":{"status":"ok","timestamp":1563716217152,"user_tz":-180,"elapsed":60431,"user":{"displayName":"Dmitriy Slabuhin","photoUrl":"","userId":"12413559071710787441"}}},"source":["!ls 'gdrive/My Drive/plates/'"],"execution_count":3,"outputs":[{"output_type":"stream","text":["plates\tplates.zip\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"s6IU930W9Ra9","colab_type":"code","colab":{}},"source":["#! unzip 'gdrive/My Drive/plates/plates.zip' -d  'gdrive/My Drive/plates/'"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"GyALrBPR9t-7","colab_type":"code","colab":{}},"source":["#!ls 'gdrive/My Drive/plates/'"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"xM_oppo69zUJ","colab_type":"code","colab":{}},"source":["#!ls 'gdrive/My Drive/plates/plates'"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"w-23CiIj-YT4","colab_type":"code","colab":{}},"source":["data_root = \"/content/gdrive/My Drive/plates/plates/\""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"G4LzzWxZ-ikA","colab_type":"code","colab":{}},"source":["from fastai import *\n","from fastai.vision import *\n","from fastai.callbacks.hooks import *\n","import os\n","import shutil \n","from tqdm import tqdm_notebook as tqdm\n","import  numpy as np\n","import pandas as pd\n","\n","\n","from albumentations import Compose, JpegCompression, CLAHE, RandomRotate90, Transpose, ShiftScaleRotate, IAAAdditiveGaussianNoise, IAAAdditiveGaussianNoise,\\\n","        Blur, OpticalDistortion, GridDistortion, HueSaturationValue, Flip, VerticalFlip, OneOf, GaussNoise, MotionBlur, MedianBlur, \\\n","        ShiftScaleRotate,  OpticalDistortion, GridDistortion, IAAPiecewiseAffine, IAASharpen, IAAEmboss, RandomBrightnessContrast, HueSaturationValue\n","\n","\n","from albumentations import torch as AT\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"pntLhbD8KQMi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":55},"outputId":"a18c2747-22e8-4739-fb14-6ecc48ce5d6f","executionInfo":{"status":"ok","timestamp":1563716220449,"user_tz":-180,"elapsed":10571,"user":{"displayName":"Dmitriy Slabuhin","photoUrl":"","userId":"12413559071710787441"}}},"source":["print(os.listdir(data_root))"],"execution_count":6,"outputs":[{"output_type":"stream","text":["['train', 'test', '29-23-87.pth', 'sample_submission.csv', 'sub.csv', '837-sub.csv', '727.csv', '727.pth', 'Копия 837-sub.csv', 'Копия 837-sub.gsheet', 'Копия Копия 837-sub.gsheet', 'valid', 'models', '848.pth', '25-20-87.pth', 'prob_sqviz.npy', 'prob_sqviz2.npy', '837.pth', '872.npy', '872.csv', '872.pth', '899.pth', '899.npy', '899.csv', '892.csv', '892.npy', '892.pth', '893.npy', '893.pth', '893.csv', '901.pth', '901.npy', '901.csv', '922.pth', '922.csv', '922.npy', '919.npy', '920.npy', 'blend.gsheet', 'blend.csv', 'learn_1.pth', '.ipynb_checkpoints', '928.pth', '928.npy', '934.npy', '934.pth', '936.npy', '936.pth', 'squiz43-18.pth', '935.npy', 'res-106.pth', '951.pth', '959.npy', 'Копия 000.pth', '959.pth', '961.npy', '961.pth', '962.pth', '962-2.npy', '962-2.pth', '000.pth', 'prob_sqviz3.npy', 'new-sub.csv']\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"0R-cx-SpwAJe","colab_type":"text"},"source":["## U-net"]},{"cell_type":"code","metadata":{"id":"tHWWVpabv--z","colab_type":"code","colab":{}},"source":["path = untar_data(URLs.CAMVID)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"eX-zMm0rybsh","colab_type":"code","colab":{}},"source":["get_y_fn = lambda x: path_lbl/f'{x.stem}_P{x.suffix}'\n","path_lbl = path/'labels'\n","path_img = path/'images'\n","\n","fnames = get_image_files(path_img)\n","lbl_names = get_image_files(path_lbl)\n","\n","# open and show image\n","img_f = fnames[10]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"G1AVLeNQyXOD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":261},"outputId":"2ac07689-5977-4fac-bbf2-ad6955c15f0a","executionInfo":{"status":"ok","timestamp":1563716939076,"user_tz":-180,"elapsed":1469,"user":{"displayName":"Dmitriy Slabuhin","photoUrl":"","userId":"12413559071710787441"}}},"source":["mask = open_mask(get_y_fn(img_f))\n","mask.show(figsize=(5, 5), alpha=1)"],"execution_count":12,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nAAAASUVORK5CYII=\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"qdDdcmEJyXaN","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"a1c7a100-e6d0-41d7-d1ce-d1a951615f67","executionInfo":{"status":"ok","timestamp":1563717324410,"user_tz":-180,"elapsed":1036,"user":{"displayName":"Dmitriy Slabuhin","photoUrl":"","userId":"12413559071710787441"}}},"source":["np.array(mask.shape[1:])//2\n"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([360, 480])"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"kHUATU44yXcz","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":244},"outputId":"0ccce09d-90b0-4ef9-8fe1-a2072eaae4b8","executionInfo":{"status":"error","timestamp":1563721690972,"user_tz":-180,"elapsed":1088,"user":{"displayName":"Dmitriy Slabuhin","photoUrl":"","userId":"12413559071710787441"}}},"source":["\n","src_size = np.array(mask.shape[1:])\n","size = src_size//2\n","bs = 2\n","\n","src = (SegmentationItemList.from_folder(path_img)\n","       # Load in x data from folder\n"," #      .split_by_fname_file('../valid.txt')\n","       # Split data into training and validation set \n","#       .label_from_func(get_y_fn, classes=codes)\n","       # Label data using the get_y_fn function\n",")\n","\n","data = (src.transform(get_transforms(), size=size, tfm_y=True)\n","        # Flip images horizontally \n","        .databunch(bs=bs)\n","        # Create a databunch\n","        .normalize(imagenet_stats)\n","        # Normalize for resnet\n",")"],"execution_count":38,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-38-b15e86aa6f79>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     12\u001b[0m )\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m data = (src.transform(get_transforms(), size=size, tfm_y=True)\n\u001b[0m\u001b[1;32m     15\u001b[0m         \u001b[0;31m# Flip images horizontally\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m         \u001b[0;34m.\u001b[0m\u001b[0mdatabunch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'SegmentationItemList' object has no attribute 'transform'"]}]},{"cell_type":"code","metadata":{"id":"rQQP6ONnyXiK","colab_type":"code","colab":{}},"source":["\n","learn = unet_learner(data, models.resnet50)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"4kZgxt25FJlB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":467},"outputId":"ab7a6490-49eb-4d10-c134-2a285e4218fa","executionInfo":{"status":"error","timestamp":1563721781184,"user_tz":-180,"elapsed":10687,"user":{"displayName":"Dmitriy Slabuhin","photoUrl":"","userId":"12413559071710787441"}}},"source":["img = data.train_ds[0][0]\n","learn.predict(img);"],"execution_count":41,"outputs":[{"output_type":"error","ename":"IndexError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-41-33b1f058c0a4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mimg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_ds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mlearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m;\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/fastai/basic_train.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, item, return_x, batch_first, with_dropout, **kwargs)\u001b[0m\n\u001b[1;32m    373\u001b[0m         \u001b[0mpred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0manalyze_pred\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mraw_pred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    374\u001b[0m         \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreconstruct\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgrab_idx\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 375\u001b[0;31m         \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreconstruct\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mhas_arg\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreconstruct\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'x'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreconstruct\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    376\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mraw_pred\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mreturn_x\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mraw_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    377\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/fastai/data_block.py\u001b[0m in \u001b[0;36mreconstruct\u001b[0;34m(self, t)\u001b[0m\n\u001b[1;32m    381\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    382\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mreconstruct\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 383\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mCategory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclasses\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    384\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    385\u001b[0m \u001b[0;32mclass\u001b[0m \u001b[0mMultiCategoryProcessor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mCategoryProcessor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mIndexError\u001b[0m: list index out of range"]}]},{"cell_type":"code","metadata":{"id":"CXs9Ejg1yXkb","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":353},"outputId":"dda4787b-60a2-48dc-fee7-32c71870b644","executionInfo":{"status":"error","timestamp":1563721645098,"user_tz":-180,"elapsed":1097,"user":{"displayName":"Dmitriy Slabuhin","photoUrl":"","userId":"12413559071710787441"}}},"source":["data = (SegmentationItemList.from_folder(data_root + 'test')\n","        .split_by_rand_pct()\n","    #    .label_from_func(get_y_fn, classes=codes)\n","      #  .transform(get_transforms(), tfm_y=True, size=128)\n","        .databunch(bs=4, path=data_root + 'test', train = None))\n","      #  .normalize(imagenet_stats))"],"execution_count":36,"outputs":[{"output_type":"error","ename":"Exception","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mException\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-36-45262dbe4f2d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0;31m#    .label_from_func(get_y_fn, classes=codes)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m       \u001b[0;31m#  .transform(get_transforms(), tfm_y=True, size=128)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m         .databunch(bs=4, path=data_root + 'test', train = None))\n\u001b[0m\u001b[1;32m      6\u001b[0m       \u001b[0;31m#  .normalize(imagenet_stats))\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/fastai/data_block.py\u001b[0m in \u001b[0;36mdatabunch\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m    515\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdatabunch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    516\u001b[0m         \u001b[0;34m\"To throw a clear error message when the data wasn't labeled.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 517\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Your data isn't labeled, can't turn it into a `DataBunch` yet!\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    518\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    519\u001b[0m \u001b[0;32mclass\u001b[0m \u001b[0mLabelLists\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mItemLists\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mException\u001b[0m: Your data isn't labeled, can't turn it into a `DataBunch` yet!"]}]},{"cell_type":"code","metadata":{"id":"PnFn-NrYEHk4","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7WmwIttuEHu2","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"we_zpZdSEHyq","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"muRVg2OREH1y","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qG8KO7HgLENZ","colab_type":"text"},"source":["## Train"]},{"cell_type":"code","metadata":{"id":"xerJ3ATQyP-_","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"X0MUj4P_9Auz","colab_type":"code","colab":{}},"source":["for i in range(4,100):\n","    if 512%i == 0:\n","        print(i, 512//i)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"EPUqUQ66wh4y","colab_type":"code","colab":{}},"source":["bs = 16 #best4\n","sz = 244"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"SwTNwTg_6fIA","colab_type":"code","colab":{}},"source":["#tfms = get_transforms(do_flip=False, flip_vert=False, max_rotate=0, max_zoom=1, max_lighting=0.0, max_warp=0.0, p_affine=1, p_lighting=1)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"4IaFnLl8tQoP","colab_type":"code","colab":{}},"source":["tfms = get_transforms(max_lighting=.7, max_zoom =1.2, max_warp =.4,\n","                      xtra_tfms = [rgb_randomize(channel = 2, thresh = .2, p=0.2),\n","                                   rgb_randomize(channel = 1, thresh = .2, p=0.2),\n","                                   rgb_randomize(channel = 0, thresh = .2, p=0.2)])\n","                     \n","                     \n","                     \n","                     \n","                     #max_rotate=45, flip_vert=True, max_zoom =1.5, max_lighting=.5) # ) , max_warp =.3,\n","                      #xtra_tfms = [rotate(degrees=(-30,30)),tfms, max_lighting=.7, \n","                             #      brightness( change=0.3),\n","                             #      brightness( change=0.7),\n","                            #       rgb_randomize(channel = 0, thresh = .2),                    rgb_randomize(channel = 1, thresh = .1, p=0.2)), rgb_randomize(channel = 0, thresh = .2, p=0.2)\n","                                   #rgb_randomize(channel = 1, thresh = .2),\n","                                   #rgb_randomize(channel = 2, thresh = .2)\n","                                   #, max_rotate=90, max_zoom =1.5,, max_warp =.5), brightness( change=0.2), contrast(1.5)\n","data = ImageDataBunch.from_folder(os.path.join(data_root), train=\"train\",\n","                                  #valid_pct=.1,\n","                                  test = 'test',\n","                                  valid = 'valid',\n","                                  bs=bs,\n","                                  #seed=111,\n","                                  ds_tfms=tfms,  #[tfms, tfms_v],\n","                                  size=sz, num_workers=4).normalize(imagenet_stats)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"AQ4z1l6usB1H","colab_type":"code","colab":{}},"source":["data.show_batch(rows=8, figsize=(16,16));"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"8ijIoCAM2X_n","colab_type":"code","colab":{}},"source":["#learn.purge();"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"iRi37P5msT8s","colab_type":"code","colab":{}},"source":["learn = cnn_learner(data, models.resnet50, metrics=accuracy,\n","                    callback_fns=[ShowGraph])#.to_fp16() #squeezenet1_1 , silent=True BnFreeze,"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"o2DzHWi3x8rB","colab_type":"code","colab":{}},"source":["learn.lr_find();\n","learn.recorder.plot()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"l0Rf5SGvVlHw","colab_type":"code","colab":{}},"source":["learn.precompute = True\n","lr = .5e-2"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"JwfWkAHsyTc7","colab_type":"code","colab":{}},"source":["learn.fit_one_cycle(max_lr=lr, cyc_len=10, callbacks=[(callbacks.tracker.SaveModelCallback(learn, monitor='valid_loss', mode='min'))])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"cKLyqoTq3W6d","colab_type":"code","colab":{}},"source":["#learn.save(data_root + 'res407-079')\n","#learn.load(data_root + '848');\n","#os.listdir(data_root)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"3Zx9FTANzotZ","colab_type":"code","colab":{}},"source":["learn.precompute = False\n","#learn.unfreeze()\n","learn.lr_find();\n","learn.recorder.plot()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"hJFua0SvyF52","colab_type":"code","colab":{}},"source":["learn.precompute = False\n","learn.unfreeze()\n","lr = .5e-4 # best .5e-4\n","learn.fit_one_cycle(max_lr=slice((lr)/200, (lr)/20, lr/1), cyc_len=100, callbacks=[(callbacks.tracker.SaveModelCallback(learn, monitor='valid_loss', mode='min'))])  #monitor='valid_loss'"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"vd5xcZSIcIxi","colab_type":"code","colab":{}},"source":["learn.recorder.plot_lr()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7R2eUBfZyNA7","colab_type":"code","colab":{}},"source":["interp = ClassificationInterpretation.from_learner(learn)\n","\n","losses, idxs = interp.top_losses()\n","\n","len(data.valid_ds)==len(losses)==len(idxs)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"D51N17-I0U9b","colab_type":"code","colab":{}},"source":["interp.plot_top_losses(4, figsize=(10,10), heatmap=False)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"CtlVAgTt0ZLm","colab_type":"code","colab":{}},"source":["interp.plot_confusion_matrix(figsize=(5,5), dpi=60)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"PJU9dkfJQm52","colab_type":"code","colab":{}},"source":["learn.recorder.plot_losses()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"NOBmiVd2ZEbs","colab_type":"code","colab":{}},"source":["learn.save(data_root + '000')\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Rk5-fx-VZEoV","colab_type":"code","colab":{}},"source":["#learn.load(data_root + '962-2');\n","learn.to_fp32();"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"09JdIVimblep","colab":{}},"source":["log_preds, y = learn.TTA(ds_type=DatasetType.Test)\n","log_preds.shape"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"aZZbDnoDEAsT","colab_type":"code","colab":{}},"source":["#log_preds[:,1][:19]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZBOupSfiuIGp","colab_type":"code","colab":{}},"source":["np.save(data_root + 'prob_sqviz3', log_preds[:,1])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"-YGYEQuvGsS2","colab_type":"code","colab":{}},"source":["#os.listdir(data_root)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"tjX06xaqbley","colab":{}},"source":["sample_submission = pd.read_csv(data_root + 'sample_submission.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"y6hLHmszZEYD","colab_type":"code","colab":{}},"source":["sample_submission.head()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qCksnC56JbFt","colab_type":"code","colab":{}},"source":["treshold = .5"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"atfzPSf-fCaH","colab_type":"code","colab":{}},"source":["fnames = [f.name[:-4] for f in learn.data.test_ds.items]\n","fnames[:5]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"kyMHQRw5fC0v","colab_type":"code","colab":{}},"source":["submission = pd.DataFrame({'id':fnames, 'label':log_preds[:,1]}, columns=['id', 'label'],)\n","submission.head(3)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"IOhIiL7C1ZEV","colab_type":"code","colab":{}},"source":["submission = submission.sort_values(by=['id']).reset_index(drop=True)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"JYiTaeWvTPhi","colab_type":"code","colab":{}},"source":["labels = pd.Series(['dirty' for i in range(submission.shape[0])])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7ENNTA5zXE-S","colab_type":"code","colab":{}},"source":["labels.head()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ILzlxWPdSWK8","colab_type":"code","colab":{}},"source":["labels[submission.label < treshold] = 'cleaned'"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"M3Vv5M2dXEJo","colab_type":"code","colab":{}},"source":["labels.head()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"4HOv9JWIUDEW","colab_type":"code","colab":{}},"source":["sample_submission.label = labels\n","sample_submission.set_index('id', inplace=True)\n","sample_submission.head(20)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"WzkMdOcC1wSM","colab_type":"code","colab":{}},"source":["sample_submission.to_csv( data_root +  'new-sub.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"-QsafgHvfzyo","colab_type":"code","colab":{}},"source":["8*32"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"5jN9onaHjyse"},"source":["## Bland"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"cUnQ1eRAjysg","colab":{}},"source":["pr1 = np.load(data_root + '922.npy')\n","pr2 = np.load(data_root + '919.npy')\n","pr3 = np.load(data_root + '920.npy')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"veCaMKHwjytk","colab":{}},"source":["mean_all = np.mean(np.array([pr1, pr2, pr3]), 0)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"a_iptsL1GJHJ","colab_type":"code","colab":{}},"source":["mean_all"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"PU75HkDeAlFO","colab_type":"code","colab":{}},"source":["#mean_all = pr1"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"5kJ_c3uRDnHk","colab_type":"code","colab":{}},"source":["#blend = pd.read_csv(data_root + 'sample_submission.csv', index_col=0)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7q4YjwCPEl8D","colab_type":"code","colab":{}},"source":["fnames = [f.name[:-4] for f in learn.data.test_ds.items]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Rt5CamhtGQSp","colab_type":"code","colab":{}},"source":["blend = pd.DataFrame({'id':fnames, 'label':mean_all}, columns=['id', 'label'],)\n","blend.head(3)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"6qlh1MUiFDKl","colab_type":"code","colab":{}},"source":["blend = blend.sort_values(by=['id']).reset_index(drop=True)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gCRKfHErFOUu","colab_type":"code","colab":{}},"source":["blend.set_index('id', inplace=True)\n","\n","blend.head(10)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"VrpXculYGhzK","colab_type":"code","colab":{}},"source":["treshold = .5"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"9qSmN0scD99B","colab_type":"code","colab":{}},"source":["blend.label[blend.label < treshold] = 'cleaned'\n","blend.label[blend.label  != 'cleaned'] = 'dirty'"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"xk41MW4EGb1g","colab_type":"code","colab":{}},"source":["blend.head(10)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"k4GMiMOqEnhy","colab_type":"code","colab":{}},"source":["blend.to_csv( data_root +  'blend.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"I2oZJu83FCfL","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}